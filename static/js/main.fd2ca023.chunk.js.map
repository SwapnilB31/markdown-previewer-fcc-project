{"version":3,"sources":["App.js","index.js"],"names":["marked","setOptions","gfm","breaks","use","renderer","link","href","title","text","App","markdownVal","useState","markdown","setMarkedDown","editorFull","setEditorFull","previewFull","setPreviewFull","className","onClick","id","value","onChange","e","target","dangerouslySetInnerHTML","__html","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQA+CAA,IAAOC,WAAW,CAChBC,KAAM,EACNC,QAAQ,IAWVH,IAAOI,IAAI,CAACC,SARK,CACfC,KADe,SACVC,EAAMC,EAAOC,GAChB,MAAM,oBAAN,OACaF,EADb,oCAC6CC,EAD7C,aACuDC,EADvD,kBAgEWC,MAvDf,WAAgB,IAcOC,EAdR,EAEqBC,mBA5DjB,i7BA0DJ,mBAENC,EAFM,KAEGC,EAFH,OAGsBF,oBAAS,GAH/B,mBAGNG,EAHM,KAGKC,EAHL,OAIwBJ,oBAAS,GAJjC,mBAINK,EAJM,KAIMC,EAJN,KAqBb,OACI,sBAAKC,UAAU,YAAf,UACE,sBAAKA,UAAW,mBAAqBJ,IAAeE,EAAc,mBAAqB,KAAOA,IAAgBF,EAAa,eAAiB,IAA5I,UACE,sBAAKI,UAAU,WAAf,UACE,8BAAK,8CACL,sBAAKA,UAAU,WAAf,UACKJ,GAAc,cAAC,IAAD,CAAkBP,MAAM,kBAAkBY,QAAS,kBAAMJ,GAAc,OACpFD,GAAc,cAAC,IAAD,CAAkBP,MAAM,kBAAkBY,QAAS,kBAAMJ,GAAc,YAG7F,0BACEK,GAAG,SACHC,MAAOT,EACPU,SAAU,SAACC,GACTV,EAAcU,EAAEC,OAAOH,aAK7B,sBAAKH,UAAW,mBAAqBJ,IAAeE,EAAc,eAAiB,KAAOA,IAAgBF,EAAa,mBAAqB,IAA5I,UACE,sBAAKI,UAAU,WAAf,UACE,8BAAK,+CACL,sBAAKA,UAAU,WAAf,UACGF,GAAe,cAAC,IAAD,CAAkBT,MAAM,kBAAkBY,QAAS,kBAAMF,GAAe,OACtFD,GAAe,cAAC,IAAD,CAAkBT,MAAM,kBAAkBY,QAAS,kBAAMF,GAAe,YAG7F,qBAAKG,GAAG,UAAUK,yBAlCLf,EAkC0CE,EAhCtD,CACLc,OAAS3B,IAAOW,cC3EtBiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fd2ca023.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport marked from 'marked'\nimport {FaWindowMaximize, FaWindowMinimize} from 'react-icons/fa'\n\nconst init_markdown =\n`\n# MarkDown Previewer\n## Built with React Functional Components\n\nIt can parse links like these :- [React Docs](https://reactjs.org/docs/getting-started.html) and [Maked Docs](https://marked.js.org/)\n\nYou can write inline code with \\`function(){}\\` and \\`class\\`.\n\nor a code block\n\n\\`\\`\\`\nclass MarkedDownPreviewer extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    return (<p>Write your own markdown</p>)\n  }\n}\n\\`\\`\\` \n\nYou can write lists\n* with bullets\n  * and indentation\n    * and even more indentation\n\n1. Or numbered lists with\n2. Two\n3. Three\n4. or four items\n\nYou can quote people like Uncle Ben\n\n> With great power comes great responsibilty.\n\nor **embhasize with bolded text**\n\nAnd even express yourself with an image ![Uncle Ben](https://static.wikia.nocookie.net/spiderman-films/images/f/fe/Uncle_Ben.jpg/revision/latest/scale-to-width-down/260?cb=20121221101204)\n`;\n\nmarked.setOptions({\n  gfm : true,\n  breaks: true,\n})\n\nconst renderer = {\n  link(href, title, text) {\n    return `\n      <a href='${href}' target='_blank' title='${title}'>${text}</a>\n    `\n  }\n}\n\nmarked.use({renderer})\n\n\nfunction App() {\n\n  const [markdown,setMarkedDown] =  useState(init_markdown)\n  const [editorFull,setEditorFull] = useState(false)\n  const [previewFull,setPreviewFull] = useState(false)\n  //const [editorSelectionStart,setSelectionStart] = useState(0)\n  //const editorRef = useRef(null)\n\n\n  /**\n   * \n   * @param {String} markdownVal \n   * @returns \n   */\n  const getMarkdown = (markdownVal) => {\n    \n    return {\n      __html : marked(markdownVal)\n    }\n  }\n\n  return (\n      <div className=\"container\">\n        <div className={\"disp-container \" + (editorFull && !previewFull ? 'disp-fullscreen ' : '') + (previewFull && !editorFull ? 'disp-hidden ' : '')}>\n          <div className=\"menu-bar\">\n            <div><strong>Editor</strong></div>\n            <div className=\"maximize\">\n                {editorFull && <FaWindowMinimize title=\"Minimize Window\" onClick={() => setEditorFull(false)}/>}\n                {!editorFull && <FaWindowMaximize title=\"Maximize Window\" onClick={() => setEditorFull(true)}/>}\n            </div>\n          </div>\n          <textarea \n            id=\"editor\"\n            value={markdown}\n            onChange={(e) => {\n              setMarkedDown(e.target.value)\n            }}            \n          ></textarea>\n        </div>\n        \n        <div className={\"disp-container \" + (editorFull && !previewFull ? 'disp-hidden ' : '') + (previewFull && !editorFull ? 'disp-fullscreen ' : '')}>\n          <div className=\"menu-bar\">\n            <div><strong>Preview</strong></div>\n            <div className=\"maximize\">\n              {previewFull && <FaWindowMinimize title=\"Minimize Window\" onClick={() => setPreviewFull(false)}/>}\n              {!previewFull && <FaWindowMaximize title=\"Maximize Window\" onClick={() => setPreviewFull(true)}/>}\n            </div>\n          </div>\n          <div id=\"preview\" dangerouslySetInnerHTML={getMarkdown(markdown)}></div>\n        </div>\n\n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}